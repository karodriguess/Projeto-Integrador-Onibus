generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cliente {
  id         Int        @id @default(autoincrement()) @db.UnsignedInt
  usuario_id Int?       @db.UnsignedInt
  nome       String?    @db.VarChar(100)
  saldo      Decimal?   @db.Decimal(8, 2)
  cpf        String?    @db.Char(11)
  usuario    usuario?   @relation(fields: [usuario_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_usuario1")
  embarque   embarque[]
  codCartao       String   @unique(map: "codCartao_UNIQUE") @db.VarChar(45)
  contador        Int?     @default(0)

  @@index([usuario_id], map: "fk_cliente_usuario1_idx")
}

model linha {
  id             Int       @id @default(autoincrement()) @db.UnsignedInt
  nome           String?   @db.VarChar(100)
  origem         String?   @db.VarChar(100)
  destino        String?   @db.VarChar(100)
  horarioPartida DateTime? @db.Time(0)
  duracao        Int?      @db.UnsignedSmallInt
  viagem         viagem[]
}

model motorista {
  id     Int      @id @default(autoincrement()) @db.UnsignedInt
  nome   String?  @db.VarChar(100)
  foto   String?  @db.VarChar(250)
  cpf    String?  @db.Char(11)
  viagem viagem[]
}

model onibus {
  id     Int      @id @default(autoincrement()) @db.UnsignedInt
  placa  String?  @db.Char(7)
  viagem viagem[]
}

model viagem {
  id           Int        @id @default(autoincrement()) @db.UnsignedInt
  linha_id     Int?       @db.UnsignedInt
  motorista_id Int?       @db.UnsignedInt
  onibus_id    Int?       @db.UnsignedInt
  dataPartida  DateTime?  @db.DateTime(0)
  dataChegada  DateTime?  @db.DateTime(0)
  embarque     embarque[]
  linha        linha?     @relation(fields: [linha_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_viagem_linha1")
  motorista    motorista? @relation(fields: [motorista_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_viagem_motorista1")
  onibus       onibus?    @relation(fields: [onibus_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_viagem_onibus1")

  @@index([linha_id], map: "fk_viagem_linha1_idx")
  @@index([motorista_id], map: "fk_viagem_motorista1_idx")
  @@index([onibus_id], map: "fk_viagem_onibus1_idx")
}

model embarque {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  cliente_id Int?      @db.UnsignedInt
  viagem_id  Int?      @db.UnsignedInt
  tarifa     Decimal?  @db.Decimal(8, 2)
  horario    DateTime? @db.DateTime(0)
  cliente    cliente?  @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_has_viagem_cliente1")
  viagem     viagem?   @relation(fields: [viagem_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_has_viagem_viagem1")

  @@index([cliente_id], map: "fk_cliente_has_viagem_cliente1_idx")
  @@index([viagem_id], map: "fk_cliente_has_viagem_viagem1_idx")
}

model usuario {
  id      Int       @id @default(autoincrement()) @db.UnsignedInt
  nome    String?   @db.VarChar(100)
  email   String?   @db.VarChar(250)
  cliente cliente[]
}
